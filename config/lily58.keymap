/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

#define LAYER_BASE 0
#define LAYER_LOWER 1
#define LAYER_NUM_NAV 2
#define LAYER_NAV 3

#define HOMEY_HOLDING_TYPE "balanced"
#define HOMEY_HOLDING_TIME 200
#define HOMEY_REPEAT_DECAY 200
#define HOMEY_STREAK_DECAY 0

// 0  1  2  3  4  5       |      6  7  8  9  10 11
// 12 13 14 15 16 17      |      18 19 20 21 22 23
// 24 25 26 27 28 29      |      30 31 32 33 34 35
// 36 37 38 39 40 41  42  |  43  44 45 46 47 48 49
//         50 51 52 53    |    54 55 56 57

#define LEFT_HAND_KEYS \
    0 1 2 3 4 5 \
    12 13 14 15 16 17 \
    24 25 26 27 28 29 \
    36 37 38 39 40 41

#define RIGHT_HAND_KEYS \
    6 7 8 9 10 11 \
    18 19 20 21 22 23 \
    30 31 32 33 34 35 \
    44 45 46 47 48 49

#define THUMB_KEYS \
    50 51 52 53 \
    54 55 56 57 \
    42 43


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
/* Number Row */
&none &none &none &mkp MCLK &mkp LCLK &mkp RCLK
&kp N0 &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp BACKSLASH &kp MINUS &kp EQUAL
/* Qwerty Row */
&caps_word &kp Q &kp W &kp E &kp R &kp T
&kp Y &kp U &kp I &kp O &kp P &caps_word
/* Home Row */
&kp ESC &left_ht LSHFT A &left_ht LGUI S &left_ht LALT D &left_ht LCTRL F &kp G
&kp H &right_ht LCTRL J &right_ht LALT K &right_ht LGUI L &right_ht LSHFT SEMI &kp SQT
/* Zxcv Row (Left) */
&kp LSHFT &left_nav_ht LSHFT Z &left_nav_ht LGUI X &left_nav_ht LALT C &left_nav_ht LCTRL V &kp B
/* Middle Buttons */
&kp GRAVE &kp BSPC
/* Zxcv Row (Right) */
&kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
/* Bottom Row */
&kp LGUI &kp DEL &kp BSPC &lt LAYER_NUM_NAV TAB
&kp RET &lt LAYER_NUM_NAV SPACE &none &none
            >;
        };

        lower_layer {
            bindings = <
/* Number Row */
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
&trans &trans &trans &trans &trans &trans
/* Qwerty Row */
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6
&kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
/* Home Row */
&kp GRAVE &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT
&kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp TILDE
/* Zxcv Row (Left) */
&trans &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans &trans
/* Middle Buttons */
&trans &trans
/* Zxcv Row (Right) */
&trans &kp MINUS &kp PLUS &kp LBRC &kp RBRC &kp PIPE
/* Bottom Row */
&trans &trans &trans &trans
&trans &trans &trans &trans
            >;
        };

        num_nav_layer {
            bindings = <
/* Number Row */
&trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans
/* Qwerty Row */
&kp PLUS &kp MINUS &kp N1 &kp N2 &kp N3 &kp N4
&kp HOME &kp PG_UP &kp UP &kp PG_DN &trans &trans
/* Home Row */
&kp COMMA &kp DOT &kp N4 &kp N5 &kp N6 &kp N7
&trans &kp END &kp LEFT &kp DOWN &kp RIGHT &trans
/* Zxcv Row (Left) */
&kp KP_MULTIPLY &kp FSLH &kp N7 &kp N8 &kp N9 &kp SPACE
/* Middle Buttons */
&kp BSPC &trans
/* Zxcv Row (Right) */
&trans &kp LCTRL &kp LALT &kp LGUI &kp LSFT &trans
/* Bottom Row */
&kp MINUS &kp EQUAL &kp N0 &trans
&trans &trans &trans &trans
            >;
        };

        nav_layer {
            bindings = <
/* Number Row */
&trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans
/* Qwerty Row */
&trans &trans &trans &trans &trans &trans
&kp HOME &kp PG_UP &kp UP &kp PG_DN &trans &trans
/* Home Row */
&trans &trans &trans &trans &trans &trans
&trans &kp END &kp LEFT &kp DOWN &kp RIGHT &trans
/* Zxcv Row (Left) */
&trans &trans &trans &trans &trans &trans
/* Middle Buttons */
&trans &trans
/* Zxcv Row (Right) */
&trans &kp LCTRL &kp LALT &kp LGUI &kp LSFT &trans
/* Bottom Row */
&trans &trans &trans &trans
&trans &trans &trans &trans
            >;
        };

    };

    behaviors {
        left_ht: left_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = HOMEY_HOLDING_TYPE;
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            // hold-trigger-on-release; // wait for other home row mods DEPRECATED
            tapping-term-ms = <HOMEY_HOLDING_TIME>;
            quick-tap-ms = <HOMEY_REPEAT_DECAY>;
            require-prior-idle-ms = <HOMEY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        right_ht: right_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = HOMEY_HOLDING_TYPE;
            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            // hold-trigger-on-release; // wait for other home row mods DEPRECATED
            tapping-term-ms = <HOMEY_HOLDING_TIME>;
            quick-tap-ms = <HOMEY_REPEAT_DECAY>;
            require-prior-idle-ms = <HOMEY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        left_nav_ht: left_nav_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            // hold-trigger-on-release; // wait for other home row mods DEPRECATED
            hold-while-undecided;
            tapping-term-ms = <HOMEY_HOLDING_TIME>;
            quick-tap-ms = <HOMEY_REPEAT_DECAY>;
            require-prior-idle-ms = <HOMEY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&lm_nav>, <&kp>;
        };

    };

    macros {
        /**
        * Temporarily switches to a layer (`&mo`) while a modifier is held.
        * Analogous to QMK's `LM()`, using a parameterized macro.
        *
        * Params:
        *  1. Layer to switch to
        *  2. Modifier to press while layer is active
        *
        * Example:
        *  `&lm NUM_LAYER LSHIFT`
        */
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };

        lm_nav: lm_nav {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to2>
                , <&lm LAYER_NAV MACRO_PLACEHOLDER>
                ;
        };
    };

};
